name: CI/CD Deploy

on:
  push:
    branches: [main]
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx-html:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx-html:latest

  terraform:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init and Apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python and Ansible
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install ansible

      - name: Setup SSH private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Add EC2 IPs to Ansible inventory
        run: |
          echo "[web]" > inventory.ini
          echo "$(terraform output -raw instance_ips | tr ',' '\n')" >> inventory.ini

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i inventory.ini ansible/playbook.yml --private-key key.pem -u ec2-user
